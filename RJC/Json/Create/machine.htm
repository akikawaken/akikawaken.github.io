<!DOCTYPE html>
<html lang="ja">
<head>
    <title>Rtm_Json_Creator - MachineJson</title>
    <meta charset=utf-8>
    <meta name="author" content="akikawa9616" />
    <meta name="description" content="RealTrainMod用Json作成支援ツール:RtmJsonCreatorのGUI版 - 機能あり/なし設置物用Json作成ページ" />
    <link rel="stylesheet" href="../../css/all-mode.css" />
</head>
<body>
    <noscript>
        <h1 color="red">注意: JavaScriptが無効化されています。</h1>
        <h2 color="red">Jsonの作成はJavaScriptを必須とします。</h2>
        <h2 color="red">JavaScriptの有効化方法は利用しているブラウザの利用案内を参照してください。</h2>
        <hr>
    </noscript>
    <h1>設置物の json を作成します</h1>
    <button id="back">←前ページに戻る</button> <a href="../index.html">←Indexに戻る</a>
    <script>
        document.getElementById("back").addEventListener("click", () => {
        history.back();
        });
    </script>
    <hr>
    <form id="form" onsubmit="event.preventDefault();">
        <label for="name">nameを決めてください。 使用可能:半角英数字(英語は小文字のみ可能)</label><br>
        <input type="text" id="name" name="name"><br><br>
        <label for="tags">tagsを決めてください。 使用可能:半角英数字(英語は小文字のみ可能)と","<br>複数指定する場合は","で区切って入力してください。(例:tag1,tag2,tag3)</label><br>
        <input type="text" id="tags" name="tags"><br><br>

        <label for="type">設置物の種類を決めてください。</label><br>
        <input type="radio" id="typeGate" name="type" value="Gate">
        <label for="typeGate">遮断機</label><br>
        <input type="radio" id="typePoint" name="type" value="Point">
        <label for="typePoint">転轍機</label><br>
        <input type="radio" id="typeTurnstile" name="type" value="Turnstile">
        <label for="typeTurnstile">改札機</label><br>
        <input type="radio" id="typeVendor" name="type" value="Vendor">
        <label for="typeVendor">券売機</label><br>
        <input type="radio" id="typeLight" name="type" value="Light">
        <label for="typeLight">照明(機能あり)</label><br>
        <input type="radio" id="typeBumpingPost" name="type" value="BumpingPost">
        <label for="typeBumpingPost">車止め</label><br>
        <input type="radio" id="typeAntenna_Send" name="type" value="Antenna_Send">
        <label for="typeAntenna_Send">ATC</label><br>
        <input type="radio" id="typeAntenna_Receive" name="type" value="Antenna_Receive">
        <label for="typeAntenna_Receive">列車検出器(Train detector)</label><br>

        <input type="radio" id="typeLamp" name="type" value="Lamp">
        <label for="typeLamp">照明(機能なし)</label><br>
        <input type="radio" id="typeStair" name="type" value="Stair">
        <label for="typeStair">階段</label><br>
        <input type="radio" id="typeScaffold" name="type" value="Scaffold">
        <label for="typeScaffold">足場</label><br>
        <input type="radio" id="typePoint" name="type" value="Pole">
        <label for="typePole">架線柱</label><br>
        <input type="radio" id="typePoint" name="type" value="Pipe">
        <label for="typePipe">パイプ</label><br>
        <input type="radio" id="typePoint" name="type" value="Plant">
        <label for="typePlant">植物</label><br><br>

        <label for="modelfile">modelを決めてください。 設置物の3Dモデルのファイル名を"拡張子あり"で入力してください。</label><br>
        <input type="text" id="modelfile" name="modelfile"><br><br>
        <h2>材質設定</h2>
        <button type="button" onclick="addTrainMat()">材質を追加</button>
        <button type="button" onclick="removeTrainMat()">最後の材質を削除</button>

        <div id="trainMatSettings"></div>
<hr>
        <label for="buttontexture">buttontextureを決めてください。<br>車輌選択画面のボタンのテクスチャへのパスを記述してください。(普通であれば、 textures/train/button_train.png などになります。)</label><br>
        <input type="text" id="buttontexture" name="buttontexture"><br><br>
        <label for="smoothing">smoothingを決めてください。</label><br>
        <input type="text" id="smoothing" name="smoothing"><br><br>
        <label for="doCulling">doCullingを決めてください。</label><br>
        <input type="text" id="doCulling" name="doCulling"><br><br>
        
        <button onclick="outputMats()">出力</button><br><br><button id="download">Download Json</button>

    </form>
    <hr>
    <h2 id="filename">------ファイル名:ModelMachine_.json-------</h2>

    <pre id="output"></pre>
    <script>
    document.getElementById("download").addEventListener("click", downloadJson);

function downloadJson() {
    var jsonString = document.getElementById("output").innerText;
    var name = document.getElementById("name").value;
    download(jsonString, 'ModelMachine_' + name + '.json', 'application/json');
}

function download(content, fileName, contentType) {
    var a = document.createElement("a");
    var file = new Blob([content], {type: contentType});
    a.href = URL.createObjectURL(file);
    a.download = fileName;
    a.click();
}

    // 列車材質設定

    function addTrainMat() {
    var count = document.getElementById('trainMatSettings').children.length + 1;
    var matSetting = document.createElement('div');
    matSetting.id = 'trainMat' + count;
    var strong = document.createElement('strong');
    strong.textContent = "3Dモデルの材質," + count + "つめの名前を決めてください。";
    matSetting.appendChild(strong);
    var p = document.createElement('p');
    p.textContent = "材質名を入力してください。";
    matSetting.appendChild(p);
    var input = document.createElement('input');
    input.type = 'text';
    input.className = 'trainMat';
    matSetting.appendChild(input);
    var p2 = document.createElement('p');
    p2.textContent = "テクスチャへのパスを記述してください。";
    matSetting.appendChild(p2);
    var input2 = document.createElement('input');
    input2.type = 'text';
    input2.className = 'trainMatTexture';
    matSetting.appendChild(input2);
    var p3 = document.createElement('p');
    p3.textContent = "オプションをつけますか? 使用可能: \"AlphaBlend\" , \"Light\" , \"AlphaBlend,Light\" , \"AlphaBlend,Light,OneTex\" ";
    matSetting.appendChild(p3);
    var options = ["AlphaBlend", "Light", "AlphaBlend,Light", "AlphaBlend,Light,OneTex", "なし"];
    for (var j = 0; j < options.length; j++) {
        var input = document.createElement('input');
        input.type = 'radio';
        input.className = 'trainMatOption';
        input.name = 'trainMatOption' + count;
        input.value = options[j];
        matSetting.appendChild(input);

        var label = document.createElement('label');
        label.htmlFor = 'trainMatOption' + count;
        label.textContent = options[j];
        matSetting.appendChild(label);
    }
  document.getElementById('trainMatSettings').appendChild(matSetting);
  }

function removeTrainMat() {
  var count = document.getElementById('trainMatSettings').children.length;
  if (count > 0) {
      var matSetting = document.getElementById('trainMat' + count);
      matSetting.parentNode.removeChild(matSetting);
  }
}

        // 出力
    function outputMats() {
    var output = "{ \n";
    var name = document.getElementById('name').value;
    output += ' "name": "' + name + '", \n';

    var tags = document.getElementById('tags').value;
    output += ' "tags": "' + tags + '", \n';
    
    var typeRadio = document.querySelector('input[name="type"]:checked');
    if (typeRadio.value == "Gate") {
        output += ' "machineType": "Gate",\n';
    }
    if (typeRadio.value == "Point") {
        output += ' "machineType": "Point",\n';
    }
    if (typeRadio.value == "Turnstile") {
        output += ' "machineType": "Turnstile",\n';
    }
    if (typeRadio.value == "Vendor") {
        output += ' "machineType": "Vendor",\n';
    }
    if (typeRadio.value == "Light") {
        output += ' "machineType": "Light",\n';
    }
    if (typeRadio.value == "BumpingPost") {
        output += ' "machineType": "BumpingPost",\n';
    }
    if (typeRadio.value == "Antenna_Send") {
        output += ' "machineType": "Antenna_Send",\n';
    }
    if (typeRadio.value == "Antenna_Receive") {
        output += ' "machineType": "Antenna_Receive",\n';
    }
    if (typeRadio.value == "Lamp") {
        output += ' "ornamentType": "Lamp",\n';
    }
    if (typeRadio.value == "Stair") {
        output += ' "ornamentType": "Stair",\n';
    }
    if (typeRadio.value == "Scaffold") {
        output += ' "ornamentType": "Scaffold",\n';
    }
    if (typeRadio.value == "Pole") {
        output += ' "ornamentType": "Pole",\n';
    }
    if (typeRadio.value == "Pipe") {
        output += ' "ornamentType": "Pipe",\n';
    }
    if (typeRadio.value == "Plant") {
        output += ' "ornamentType": "Plant",\n';
    }

    output += ' "model":{ \n';
    
    var modelfile = document.getElementById('modelfile').value;
    output += '  "modelFile": "' + modelfile + '", \n';

    output += '  "textures":[ \n';
    var count = document.getElementById('trainMatSettings').children.length;

    for (var i = 1; i <= count; i++) {
        var trainMat = document.querySelector('#trainMat' + i + ' .trainMat').value;
        var trainMatTexture = document.querySelector('#trainMat' + i + ' .trainMatTexture').value;
        var trainMatOptionRadio = document.querySelector('input[name="trainMatOption' + i + '"]:checked');
        var trainMatOption = trainMatOptionRadio ? (trainMatOptionRadio.value === "なし" ? "" : trainMatOptionRadio.value) : "";
        if (i == count) {
            output += '   ["' + trainMat + '", "' + trainMatTexture + '", "' + trainMatOption + '"] \n  ] \n }, \n';
        } else {
            output += '   ["' + trainMat + '", "' + trainMatTexture + '", "' + trainMatOption + '"],';
        }
    }

    var smoothing = document.getElementById('smoothing').value;
    output += ' "smoothing":' + smoothing + ', \n';
    
    var doCulling = document.getElementById('doCulling').value;
    output += ' "doCulling":' + doCulling + ', \n';

    var buttontexture = document.getElementById('buttontexture').value;
    output += ' "buttontexture": "' + buttontexture + '" \n';

    output += "}";

    document.getElementById('output').textContent = output;
    document.getElementById("filename").innerHTML = "------ファイル名:ModelMachine_" + name + ".json-------";
}

    </script>

</body>
</html>