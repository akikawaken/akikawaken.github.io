<!DOCTYPE html>
<html lang="ja">
<head>
    <title>Rtm_Json_Creator - NPCJson</title>
    <meta charset=utf-8>
    <meta name="author" content="akikawa9616" />
    <meta name="description" content="RealTrainMod向けJson作成支援ツール:RtmJsonCreatorのブラウザ版 - npc" />
    <link rel="stylesheet" href="../../css/all-mode.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
</head>
<body>
    <noscript>
        <h1 color="red">注意: JavaScriptが無効化されています。</h1>
        <h2 color="red">Jsonの作成はJavaScriptを必須とします。</h2>
        <h2 color="red">JavaScriptの有効化方法は利用しているブラウザの利用案内を参照してください。</h2>
        <hr>
    </noscript>
    <h1>NPCの json を作成します</h1>
    <button id="back">←前ページに戻る</button> <a href="../index.html">←Indexに戻る</a>
    <script>
        document.getElementById("back").addEventListener("click", () => {
        history.back();
        });
    </script>
    <hr>
    <form id="form" onsubmit="event.preventDefault();">
        <label for="name">nameを決めてください。 使用可能:半角英数字(英語は小文字のみ可能)</label><br>
        <input type="text" id="name" name="name"><br><br>

        <label for="type">NPCの種類を決めてください。</label><br>
        <input type="radio" id="typeattendant" name="type" value="attendant">
        <label for="typeattendant">駅員: 機能未設定</label><br>
        <input type="radio" id="typeguard" name="type" value="guard">
        <label for="typeguard">警備員: モンスターを攻撃する</label><br>
        <input type="radio" id="typemannequin" name="type" value="mannequin">
        <label for="typemannequin">マネキン: 動かない</label><br>
        <input type="radio" id="typepassenger" name="type" value="passenger">
        <label for="typepassenger">乗客: 列車に乗り降りする</label><br>
        <br>
        <label for="modelfile">modelを決めてください。 NPCの3Dモデルのファイル名を"拡張子あり"で入力してください。</label><br>
        <input type="text" id="modelfile" name="modelfile"><br><br>
        <h2>材質設定</h2>
        <button type="button" onclick="addTrainMat()">材質を追加</button>
        <button type="button" onclick="removeTrainMat()">最後の材質を削除</button>

        <div id="trainMatSettings"></div>
<hr>
        <label for="smoothing">smoothingを決めてください。</label><br>
        <input type="text" id="smoothing" name="smoothing"><br><br>
        <label for="doCulling">doCullingを決めてください。</label><br>
        <input type="text" id="doCulling" name="doCulling"><br><br>
        
        <button onclick="outputMats()">出力</button><br><br><button id="download">Download Json</button>

    </form>
    <hr>
    <h2 id="filename">------ファイル名:ModelNPC_.json-------</h2>

    <pre id="output"></pre>
    <script>
    document.getElementById("download").addEventListener("click", downloadJson);

function downloadJson() {
    var jsonString = document.getElementById("output").innerText;
    var name = document.getElementById("name").value;
    download(jsonString, 'ModelNPC_' + name + '.json', 'application/json');
}

function download(content, fileName, contentType) {
    var a = document.createElement("a");
    var file = new Blob([content], {type: contentType});
    a.href = URL.createObjectURL(file);
    a.download = fileName;
    a.click();
}

    // 列車材質設定
function addTrainMat() {
    var count = $('#trainMatSettings').children().length + 1;
    var matSetting = $('<div>').attr('id', 'trainMat' + count);
    matSetting.append($('<strong>').text("3Dモデルの材質," + count + "つめの名前を決めてください。"));
    matSetting.append($('<p>').text("材質名を入力してください。"));
    matSetting.append($('<input>').attr('type', 'text').attr('class', 'trainMat'));
    matSetting.append($('<p>').text("テクスチャへのパスを記述してください。"));
    matSetting.append($('<input>').attr('type', 'text').attr('class', 'trainMatTexture'));
    matSetting.append($('<p>').text("オプションをつけますか? 使用可能: \"AlphaBlend\" , \"Light\" , \"AlphaBlend,Light\" , \"OneTex\" "));
    var options = ["AlphaBlend", "Light", "AlphaBlend,Light", "OneTex", "なし"];
    for (var j = 0; j < options.length; j++) {
      matSetting.append($('<input>').attr('type', 'radio').attr('class', 'trainMatOption').attr('name', 'trainMatOption' + count).attr('value', options[j]));
      matSetting.append($('<label>').attr('for', 'trainMatOption' + count).text(options[j]));
    }
    $('#trainMatSettings').append(matSetting);
}

        function removeTrainMat() {
            var count = $('#trainMatSettings').children().length;
            if (count > 0) {
                $('#trainMat' + count).remove();
            }
        }

        // 出力
        function outputMats() {
            var output = "{ \n";
            var name = $('#name').val();
            output += ' "name": "' + name + '", \n';
            
            var typeRadio = document.querySelector('input[name="type"]:checked');
                if (typeRadio.value == "attendant") {
                    output += ' "role": "attendant",\n';
                }
            var typeRadio = document.querySelector('input[name="type"]:checked');
                if (typeRadio.value == "guard") {
                    output += ' "role": "guard",\n';
                }
            var typeRadio = document.querySelector('input[name="type"]:checked');
                if (typeRadio.value == "mannequin") {
                    output += ' "role": "mannequin",\n';
                }
                var typeRadio = document.querySelector('input[name="type"]:checked');
                if (typeRadio.value == "passenger") {
                    output += ' "role": "passenger",\n';
                }

            output += ' "model":{ \n';
            
            var modelfile = $('#modelfile').val();
            output += '  "modelFile": "' + modelfile + '", \n';

            output += '  "textures":[ \n';
            var count = $('#trainMatSettings').children().length;

        for (var i = 1; i <= count; i++) {
          var trainMat = $('#trainMat' + i + ' .trainMat').val();
          var trainMatTexture = $('#trainMat' + i + ' .trainMatTexture').val();
          var trainMatOptionRadio = document.querySelector('input[name="trainMatOption' + i + '"]:checked');
           var trainMatOption = trainMatOptionRadio ? (trainMatOptionRadio.value === "なし" ? "" : trainMatOptionRadio.value) : "";
         if (i == count) {
           output += '   ["' + trainMat + '", "' + trainMatTexture + '", "' + trainMatOption + '"] \n  ] \n }, \n';
           } else {
           output += '   ["' + trainMat + '", "' + trainMatTexture + '", "' + trainMatOption + '"],\n';
           }
        }

            var smoothing = document.getElementById('smoothing').value
            output += ' "smoothing":' + smoothing + ', \n';
            
            var doCulling = document.getElementById('doCulling').value
            output += ' "doCulling":' + doCulling + ' \n';

            output += "}";
            

            document.getElementById('output').textContent = output;
            
            $('#output').text(output);
            document.getElementById("filename").innerHTML = "------ファイル名:ModelNPC_" + name + ".json-------";
        }
    </script>
</body>
</html>
